Model(
  (relu): ReLU(inplace=True)
  (conv1): Sequential(
    (0): Conv2d(1, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (conv2): Sequential(
    (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (cbam): CBAM(
    (cam): CAM(
      (mlp): Sequential(
        (0): Flatten()
        (1): Linear(in_features=8, out_features=1, bias=True)
        (2): Dropout(p=0.5, inplace=False)
        (3): ReLU(inplace=True)
        (4): Linear(in_features=1, out_features=8, bias=True)
        (5): Dropout(p=0.5, inplace=False)
        (6): ReLU(inplace=True)
      )
    )
    (sam): SAM(
      (pool): ChannelPooling()
      (conv): ConvLayer(
        (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
        (bn): BatchNorm2d(1, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      )
    )
  )
  (block1): Block(
    (conv): Sequential(
      (0): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (sep_conv1): SeparableConv2d(
      (depthwise): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)
      (bnd): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bnp): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (sep_conv2): SeparableConv2d(
      (depthwise): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
      (bnd): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(16, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bnp): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cbam): CBAM(
      (cam): CAM(
        (mlp): Sequential(
          (0): Flatten()
          (1): Linear(in_features=16, out_features=2, bias=True)
          (2): Dropout(p=0.5, inplace=False)
          (3): ReLU(inplace=True)
          (4): Linear(in_features=2, out_features=16, bias=True)
          (5): Dropout(p=0.5, inplace=False)
          (6): ReLU(inplace=True)
        )
      )
      (sam): SAM(
        (pool): ChannelPooling()
        (conv): ConvLayer(
          (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (bn): BatchNorm2d(1, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
        )
      )
    )
    (maxp): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (relu): ReLU(inplace=True)
  )
  (block2): Block(
    (conv): Sequential(
      (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(32, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (sep_conv1): SeparableConv2d(
      (depthwise): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
      (bnd): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bnp): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (sep_conv2): SeparableConv2d(
      (depthwise): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bnd): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(32, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bnp): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cbam): CBAM(
      (cam): CAM(
        (mlp): Sequential(
          (0): Flatten()
          (1): Linear(in_features=32, out_features=4, bias=True)
          (2): Dropout(p=0.5, inplace=False)
          (3): ReLU(inplace=True)
          (4): Linear(in_features=4, out_features=32, bias=True)
          (5): Dropout(p=0.5, inplace=False)
          (6): ReLU(inplace=True)
        )
      )
      (sam): SAM(
        (pool): ChannelPooling()
        (conv): ConvLayer(
          (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (bn): BatchNorm2d(1, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
        )
      )
    )
    (maxp): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (relu): ReLU(inplace=True)
  )
  (block3): Block(
    (conv): Sequential(
      (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(64, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (sep_conv1): SeparableConv2d(
      (depthwise): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bnd): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bnp): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (sep_conv2): SeparableConv2d(
      (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
      (bnd): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(64, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bnp): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cbam): CBAM(
      (cam): CAM(
        (mlp): Sequential(
          (0): Flatten()
          (1): Linear(in_features=64, out_features=8, bias=True)
          (2): Dropout(p=0.5, inplace=False)
          (3): ReLU(inplace=True)
          (4): Linear(in_features=8, out_features=64, bias=True)
          (5): Dropout(p=0.5, inplace=False)
          (6): ReLU(inplace=True)
        )
      )
      (sam): SAM(
        (pool): ChannelPooling()
        (conv): ConvLayer(
          (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (bn): BatchNorm2d(1, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
        )
      )
    )
    (maxp): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (relu): ReLU(inplace=True)
  )
  (block4): Block(
    (conv): Sequential(
      (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(128, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (sep_conv1): SeparableConv2d(
      (depthwise): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=64, bias=False)
      (bnd): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bnp): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (sep_conv2): SeparableConv2d(
      (depthwise): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
      (bnd): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (bnp): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (cbam): CBAM(
      (cam): CAM(
        (mlp): Sequential(
          (0): Flatten()
          (1): Linear(in_features=128, out_features=16, bias=True)
          (2): Dropout(p=0.5, inplace=False)
          (3): ReLU(inplace=True)
          (4): Linear(in_features=16, out_features=128, bias=True)
          (5): Dropout(p=0.5, inplace=False)
          (6): ReLU(inplace=True)
        )
      )
      (sam): SAM(
        (pool): ChannelPooling()
        (conv): ConvLayer(
          (conv): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (bn): BatchNorm2d(1, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
        )
      )
    )
    (maxp): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (relu): ReLU(inplace=True)
  )
  (last_conv): Sequential(
    (0): Conv2d(128, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): BatchNorm2d(7, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (avgp): AdaptiveAvgPool2d(output_size=(1, 1))
)
